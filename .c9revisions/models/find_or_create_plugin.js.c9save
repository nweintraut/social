{"ts":1367352776443,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1367352821923,"patch":[[{"diffs":[[1,"/*\n* From https://github.com/drudge/mongoose-findorcreate/blob/master/index.js\n*/ \n\nfunction findOrCreatePlugin(schema, options) {\n    schema.statics.findOrCreate = function findOrCreate(conditions, doc, options, callback) {\n        \n    });\n}\n\nmodule.exports = findOrCreatePlugin;"]],"start1":0,"start2":0,"length1":0,"length2":281}]],"length":281,"saved":false}
{"ts":1367353319813,"patch":[[{"diffs":[[0,"    "],[1,"if (arguments.length < 4) {\n            if (typeof options === 'function'){\n                // Scenario: findOrCreate(coditions, doc, callback)\n                callback = options;\n                options = {};\n            } else if (typeof doc === 'funciton') {\n                // Scenario: findOrCreate(conditions, callback);\n                callback = doc;\n                doc = {};\n                options = {};\n            }\n        }\n        var self = this;\n        this.findOne(conditions, function(err, result) {\n           if(err || result) {\n               // if no error, then there is an entry; now update entry if there's an upsert\n               if (options && options.upsert && !err) {\n                   self.update(conditions, doc, function(err, numberAffected, raw){\n                       if (err) {\n                           // Neil may want to handle error\n                           console.log (err.message);\n                       } else {\n                           self.findOne(conditions, function(err, result){\n                              callback(err, result, false); \n                           });\n                       }\n                   });\n               }\n               \n           } \n        });"],[0,"\n    }"],[-1,")"],[0,";\n}\n"]],"start1":229,"start2":229,"length1":15,"length2":1252}]],"length":1518,"saved":false}
{"ts":1367353338055,"patch":[[{"diffs":[[0,"                "],[1,"return "],[0,"callback(err, re"]],"start1":1287,"start2":1287,"length1":32,"length2":39}]],"length":1525,"saved":false}
{"ts":1367353356125,"patch":[[{"diffs":[[0,"ssage);\n"],[1,"                           return callback(err, null, fasle);\n"],[0,"        "]],"start1":1158,"start2":1158,"length1":16,"length2":78}]],"length":1587,"saved":false}
{"ts":1367353501552,"patch":[[{"diffs":[[0,", fa"],[-1,"s"],[0,"l"],[1,"s"],[0,"e);\n"]],"start1":1218,"start2":1218,"length1":10,"length2":10},{"diffs":[[0,"false); "],[1,"// false means that the record already existed"],[0,"\n       "]],"start1":1394,"start2":1394,"length1":16,"length2":62},{"diffs":[[0,"   }"],[-1,"\n               \n           } "],[1," else {\n                   // Only get here if there's either (a) an error or (b) no update\n                   return callback(err, result, false);\n               }\n               \n           }  else {\n               for (var key in doc) {\n                   conditions[key] = doc[key];\n               }\n           }"],[0,"\n   "]],"start1":1540,"start2":1540,"length1":38,"length2":324}]],"length":1919,"saved":false}
{"ts":1367353581754,"patch":[[{"diffs":[[0," && !err) {\n"],[1,"                   // Note: Update does *not* return a document\n"],[0,"            "]],"start1":922,"start2":922,"length1":24,"length2":88}]],"length":1983,"saved":false}
{"ts":1367353786649,"patch":[[{"diffs":[[0,"itions, "],[-1,"doc"],[1,"update"],[0,", option"]],"start1":191,"start2":191,"length1":19,"length2":22},{"diffs":[[0,"lback = "],[-1,"doc"],[1,"update"],[0,";\n      "]],"start1":582,"start2":582,"length1":19,"length2":22},{"diffs":[[0,"        "],[-1,"doc"],[1,"update"],[0," = {};\n "]],"start1":606,"start2":606,"length1":19,"length2":22},{"diffs":[[0,", number"],[1,"OfDocs"],[0,"Affected"]],"start1":1067,"start2":1067,"length1":16,"length2":22}]],"length":1998,"saved":false}
{"ts":1367353791435,"patch":[[{"diffs":[[0,"itions, "],[-1,"doc"],[1,"update"],[0,", functi"]],"start1":1042,"start2":1042,"length1":19,"length2":22}]],"length":2001,"saved":false}
{"ts":1367353805997,"patch":[[{"diffs":[[0," key in "],[-1,"doc"],[1,"update"],[0,") {\n    "]],"start1":1851,"start2":1851,"length1":19,"length2":22},{"diffs":[[0,"[key] = "],[-1,"doc"],[1,"update"],[0,"[key];\n "]],"start1":1898,"start2":1898,"length1":19,"length2":22}]],"length":2007,"saved":false}
{"ts":1367353832927,"patch":[[{"diffs":[[0,"              }\n"],[1,"               var obj = new self(conditions)\n               obj.save(function(err) {\n                   \n               });\n"],[0,"           }\n   "]],"start1":1920,"start2":1920,"length1":32,"length2":157}]],"length":2132,"saved":false}
{"ts":1367353865533,"patch":[[{"diffs":[[0,"function(err"],[1,", result"],[0,") {\n        "]],"start1":2006,"start2":2006,"length1":24,"length2":32},{"diffs":[[0,"                "],[1,"callback(err, result, true);"],[0,"\n               "]],"start1":2033,"start2":2033,"length1":32,"length2":60}]],"length":2168,"saved":false}
{"ts":1367353880731,"patch":[[{"diffs":[[0,"(typeof "],[-1,"doc"],[1,"update"],[0," === 'fu"]],"start1":468,"start2":468,"length1":19,"length2":22},{"diffs":[[0,"ditions)"],[1,";"],[0,"\n       "]],"start1":1976,"start2":1976,"length1":16,"length2":17}]],"length":2172,"saved":false}
{"ts":1367353886676,"patch":[[{"diffs":[[0,"itions, "],[-1,"doc"],[1,"update"],[0,", callba"]],"start1":357,"start2":357,"length1":19,"length2":22}]],"length":2175,"saved":false}
