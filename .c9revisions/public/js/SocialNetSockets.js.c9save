{"ts":1367716151982,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1367716300789,"patch":[[{"diffs":[[1,"define(['Sockets', 'models/contactcollection', 'views/chat'], \nfunction(sio, ContactCollection, ChatView){\n    var SocialNetSockets = function(eventDispatcher){\n        var socket = null;\n        var connectSocket = function(){\n            socket = io.connect();\n            socket\n                .on('connect_failed', function(reason){\n                    console.error('unable to connect', reason);\n                })\n                .on('connect', function(){\n                    eventDispatcher.bind('socket:chat', sendChat);\n                });\n        }\n    };\n});"]],"start1":0,"start2":0,"length1":0,"length2":571}]],"length":571,"saved":false}
{"ts":1367716368720,"patch":[[{"diffs":[[0,"       }"],[1,";\n        var sendChat = function(payload){\n            if(null!== socket) {\n                socket.emit('chatclient', payload);\n            }\n        };"],[0,"\n    };\n"]],"start1":552,"start2":552,"length1":16,"length2":169}]],"length":724,"saved":false}
{"ts":1367716570794,"patch":[[{"diffs":[[0,"    "],[-1,"});\n        };\n        var sendChat = function(payload){\n            if(null!== socket) {\n                socket.emit('chatclient', payload);\n            }\n        };"],[1,"    socket.on('chatserver', function(data){\n                        eventDispatcher.trigger('socket:chat:start:' + data.from);\n                        eventDispatcher.trigger('socket:chat:in:' + data.from, data);\n                    });\n                    var contactsCollection = new ContactCollection();\n                    contactsCollection.url = '/accounts/me/contacts';\n                    new ChatView({collection: contactsCollection, socketEvents: eventDispatcher}).render();\n                    contactsCollection.fetch();\n                });\n        };\n        var sendChat = function(payload){\n            if(null!== socket) {\n                socket.emit('chatclient', payload);\n            }\n        };\n        eventDispatcher.bind('app:loggin', connectSocket);\n    };\n    return {\n        initialize: function(eventDispatacher) {\n            SocialNetSockets(eventDispatacher);\n        }"],[0,"\n   "]],"start1":543,"start2":543,"length1":174,"length2":909}]],"length":1459,"saved":false}
